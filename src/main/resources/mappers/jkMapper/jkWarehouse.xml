<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.OMG.mappers.jkWarehouse">

    <!-- 조회 쿼리: 특정 월의 입고 및 재고 데이터 가져오기 -->
    <select id="monthDataList" resultType="Warehouse" parameterType="map">
        SELECT w.*, i.name, m.mem_name
        FROM Warehouse w
        INNER JOIN Item i ON w.code = i.code
        INNER JOIN Customer c ON i.custcode = c.custcode
        INNER JOIN Member m ON c.mem_id = m.mem_id
        WHERE w.YM = #{month, jdbcType=VARCHAR}
        AND (
            (#{invType, jdbcType=VARCHAR} = 'ALL' AND (w.INVEN = 0 OR w.INVEN = 1))
            OR (#{invType, jdbcType=VARCHAR} = 'OPENING' AND w.INVEN = 0)
            OR (#{invType, jdbcType=VARCHAR} = 'CLOSING' AND w.INVEN = 1)
        )
    </select>

    <!-- 저장 프로시저 호출: 구매 데이터 가져오기 -->
    <select id="getPurchaseData" statementType="CALLABLE" parameterType="hashmap" resultType="hashmap">
        {call GET_PURCHASE_DATA(
            #{month, mode=IN, jdbcType=VARCHAR},
            #{result, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=resultmap01}
        )}
    </select>

    <!-- 결과 매핑 -->
    <resultMap id="resultmap01" type="Warehouse">
        <result property="title" column="TITLE" />
        <result property="purStatus" column="PUR_STATUS" />
        <result property="custCode" column="CUSTCODE" />
        <result property="purDate" column="PUR_DATE" />
        <result property="code" column="CODE" />
        <result property="qty" column="QTY" />
        <result property="price" column="PRICE" />
    </resultMap>

    <!-- 아이템 조회 -->
    <select id="selectItem" resultType="map">
        SELECT i.name , m.mem_name, w.cnt
        FROM item i
        INNER JOIN customer c ON i.custcode = c.custcode
        INNER JOIN member m ON c.mem_id = m.mem_id
        INNER JOIN warehouse w ON i.code = w.code
        WHERE i.code = #{code} and w.ym = #{ym} AND w.inven = '0'
    </select>

    <!-- 아이템 조회2 -->
    <select id="selectItem2" resultType="map">
        SELECT i.name, m.mem_name
        FROM item i
        INNER JOIN customer c ON i.custcode = c.custcode
        INNER JOIN member m ON c.mem_id = m.mem_id
        WHERE i.code = #{code}
    </select>

    <!-- 기초 등록 -->
    <insert id="insertInv" parameterType="Warehouse">
        <selectKey keyProperty="code" resultType="int" order="BEFORE">
            SELECT code FROM item WHERE code = #{code, jdbcType=INTEGER}
        </selectKey>
        INSERT INTO Warehouse(ym, inven, code, cnt, reg_date)
        VALUES(#{ym}, 0, #{code}, #{cnt}, SYSDATE)
    </insert>

    <!-- 기초 수정 -->
    <update id="updateInv" parameterType="Warehouse">
        UPDATE Warehouse
        SET cnt = #{cnt}
        WHERE ym = #{ym, jdbcType=VARCHAR}
        AND code = #{code}
    </update>

    <!-- 기초 삭제 -->
    <delete id="deleteInv" parameterType="Warehouse">
        DELETE FROM Warehouse
        WHERE ym = #{ym}
        AND code = #{code}
    </delete>

    <!-- 월간 구매 데이터 조회 -->
    <select id="purMonthData" parameterType="Purchase" resultType="Purchase">
        Select *
        From (
            Select ROWNUM rn, a.*
            From (
                Select p.*, m.mem_name appli_name, c.company, c.mem_id mgr_id
                From purchase p, member m, customer c
                Where p.mem_id = m.mem_id
                <if test="custcode > 0">
                    AND (p.custcode = #{custcode})
                </if>
                <if test="pur_date != null">
                    AND (p.pur_date = #{pur_date})
                </if>
                and p.custcode = c.custcode
                Order by p.pur_date DESC
            ) a
        ) b
        WHERE rn BETWEEN #{start} and #{end}
    </select>

    <!-- 입고 처리 프로시저 호출 -->
    <update id="callInboundPD" statementType="CALLABLE">
        {CALL process_incoming_inventory2(
            #{purDate, mode=IN, jdbcType=VARCHAR},
            #{custCode, mode=IN, jdbcType=NUMERIC}
        )}
    </update>
    
     <!-- 출고 처리 프로시저 호출 -->
    <update id="callOutboundPD" statementType="CALLABLE">
        {CALL process_outgoing_inventory(
            #{salesDate, mode=IN, jdbcType=VARCHAR},
            #{custCode, mode=IN, jdbcType=NUMERIC}
        )}
    </update>
    
    <!-- 마감 프로시저 호출 -->
	  <update id="callCloseMonth" statementType="CALLABLE">
	    {CALL CLOSE_MONTH(
	        #{inboundMonth, mode=IN, jdbcType=VARCHAR}
	    )}
	  </update>


    <!-- 입고 목록 조회 -->
    <select id="inboundList" parameterType="Warehouse" resultType="Warehouse">
        SELECT p.pur_date, pd.code, i.name, c.company, pd.qty, m.mem_name, w.reg_date, w.inven
        FROM purchase p
        JOIN member m ON p.mem_id = m.mem_id
        JOIN customer c ON p.custcode = c.custcode
        JOIN pur_detail pd ON p.pur_date = pd.pur_date AND p.custcode = pd.custcode
        JOIN item i ON pd.code = i.code
        JOIN warehouse w ON pd.code = w.code AND w.inven = 1
        WHERE p.pur_status = 2
        ORDER BY p.pur_date DESC
    </select>

    <!-- 입고 총 수량 조회 -->
    <select id="inboundTotal" parameterType="Warehouse" resultType="int">
        SELECT count(*)
        FROM warehouse
        WHERE inven = 1
    </select>

    <!-- 월간 입고 목록 조회 -->
    <select id="monthInbound" parameterType="Warehouse" resultType="Warehouse">
        SELECT p.pur_date, pd.code, i.name, c.company, pd.qty, m.mem_name, w.reg_date, w.inven
        FROM purchase p
        JOIN member m ON p.mem_id = m.mem_id
        JOIN customer c ON p.custcode = c.custcode
        JOIN pur_detail pd ON p.pur_date = pd.pur_date AND p.custcode = pd.custcode
        JOIN item i ON pd.code = i.code
        JOIN warehouse w ON pd.code = w.code AND w.inven = 1
        WHERE p.pur_status = 2
        <if test="inboundMonth != null and inboundMonth != ''">
        AND TO_CHAR(w.reg_date, 'YYYY-MM') = #{inboundMonth, jdbcType=VARCHAR}
      </if>
    ORDER BY p.pur_date DESC
    </select>
    
    <!-- 월간 출고 목록 조회 -->
    <select id="monthOutbound" parameterType="Warehouse" resultType="Warehouse">
    	SELECT s.sales_date, sd.code, i.name, c.company, sd.qty, w.reg_date, w.inven
		FROM sales s
		JOIN customer c ON s.custcode = c.custcode
		JOIN sales_detail sd ON s.sales_date = sd.sales_date AND s.custcode = sd.custcode
		JOIN item i ON sd.code = i.code
		JOIN warehouse w ON sd.code = w.code AND w.inven = 1
		WHERE s.sales_status = 3
	  	AND (#{outboundMonth} IS NULL OR TO_CHAR(w.reg_date, 'YYYY-MM') = #{outboundMonth, jdbcType=VARCHAR})
		ORDER BY s.sales_date DESC
    </select>

</mapper>
